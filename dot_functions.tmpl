#!/bin/bash
mkcd() { mkdir -p "$@" && cd "$_"; }
scratch() { mkdir -p "/tmp/scratchfolder" && cd "/tmp/scratchfolder" }
sman() { curl cht.sh/$1 }
bw() { /usr/bin/bw --session $(cat {{ .bwSessionPath }}) $@ }
okctl() { $(ovm current -p) $@ }
netup() { sudo netctl start $1 && sudo netctl wait-online $1 }
passgen() { pwgen -sync $1 | cut -d' ' -f1 | wl-copy -n }

##################################################
##### Helm
##################################################
#h() {
#  # Gotten from Yngvar Kristiansen
#  CURRENT_NAMESPACE=`kubectl config view --minify --output 'jsonpath={..namespace}'`
#  echo Using namespace for helm: $CURRENT_NAMESPACE
#  helm --tiller-namespace=$CURRENT_NAMESPACE $@
#}
h() {
  CURRENT_NAMESPACE=`kubectl config view --minify --output 'jsonpath={..namespace}'`
  echo Using namespace for helm: $CURRENT_NAMESPACE
  /usr/bin/helm --namespace=$CURRENT_NAMESPACE $@
}

##################################################
##### Kubernetes
##################################################
#alias kset2="export KUBECONFIG=~/.kube/configs/$1.yaml"
kset() {
  export KUBECONFIG=~/.kube/configs/$1.yaml
}
ksethere() {
	export KUBECONFIG=${PWD}/kubeconfig.yaml
}
knset() {
  export KUBENAMESPACE=$1
}

##################################################
##### Docker
##################################################
prunedocker() {
	docker stop $(docker ps -q) &> /dev/null # Stops all running containers
	docker rm $(docker ps -aq)  &> /dev/null # Removes all containers
	docker rmi -f $(docker images -aq) &> /dev/null # Removes all images
	docker system prune --volumes # Removes most docker data
}

##################################################
##### Git
##################################################
gdf() {
	if [ -z "$1" ]; then
		    echo "usage: $0 number_of_commits"
	fi

	git diff --name-only HEAD~$1 HEAD | cat
}

yolo() {
	current=`git branch --show-current`

	if [[ "${current}" == "master" ]]; then
		echo "careful! no yoloing on master"

		return 1
	fi

	if [[ "${current}" == "main" ]]; then
		echo "careful! no yoloing on main"

		return 1
	fi

	echo "LEEEEEEROY"

	git push -f
}

##################################################
##### AWS
##################################################
profile-select() {
    export AWS_PROFILE=$(aws configure list-profiles | fzf)
}

##################################################
##### Port forwarding
##################################################
ksyncthing() {
	NAME=$(kubectl -n personal get pods | grep syncthing | cut -d' ' -f1)

	kubectl -n personal port-forward ${NAME} 8000:8384
}

kargocd() {
	kubectl -n argocd port-forward svc/argocd-server 8000:443
}

gwc() {
    targetDir=$(basename $1 | cut -d'.' -f1)

    mkdir -p $targetDir
    cd $targetDir

    git clone --bare $1 .bare
    echo "gitdir: ./.bare" > .git
}

bwlogin() {
  /usr/bin/bw login {{ .privateEmail }} --raw > {{ .bwSessionPath }} || \
    /usr/bin/bw unlock --raw > {{ .bwSessionPath }}
}

qa() {
  gh pr create \
    --title "T-$(git rev-parse --abbrev-ref HEAD|cut -d'-' -f2)" \
    --editor
}

work() {
  set-work-profile
  sudo netctl start origo-psk
}

home() {
  set-laptop-profile
  sudo netctl start home
}

dnm() {
  git diff $(git diff --name-only | head -1)
}
